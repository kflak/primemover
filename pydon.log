--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyUSB0', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('could not open serial port', '/dev/ttyUSB0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyUSB0. Now waiting for messages.


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/ttyUSB0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/ttyUSB0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/ttyUSB0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/ttyUSB0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/ttyUSB0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/ttyUSB0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/ttyUSB0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/ttyUSB0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 10 is configured


minibee 10 is configured


('no configuration defined for minibee', '0000355000003550', 1, '')


configuration saved to newconfig_2017_Jul_26_16-50-36.xml. Please adapt (at least define a config id other than -1 for the node), save to a new name,


and restart the program with that configuration file. Alternatively send a message with a new configuration (via osc, or via the datanetwork).


Check documentation for details.


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


('no configuration defined for minibee', '0000355000003550', 1, '')


configuration saved to newconfig_2017_Jul_26_16-50-58.xml. Please adapt (at least define a config id other than -1 for the node), save to a new name,


and restart the program with that configuration file. Alternatively send a message with a new configuration (via osc, or via the datanetwork).


Check documentation for details.


Waiting for Server-thread to finish
Exception in thread Thread-6:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')





Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


('no configuration defined for minibee', '0000355000003550', 1, '')


configuration saved to newconfig_2017_Jul_26_16-51-06.xml. Please adapt (at least define a config id other than -1 for the node), save to a new name,


and restart the program with that configuration file. Alternatively send a message with a new configuration (via osc, or via the datanetwork).


Check documentation for details.


minibee 10 is configured


minibee 10 is configured


minibee 10 is configured


minibee 10 is configured


minibee 10 is configured


Exception in thread xbee-thread:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 110, in run
    self._callback(self.wait_read_frame())
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 460, in wait_read_frame
    frame = self._wait_for_frame()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 177, in _wait_for_frame
    if self.serial.inWaiting() == 0:
  File "build/bdist.macosx-10.9-intel/egg/serial/serialposix.py", line 449, in inWaiting
    s = fcntl.ioctl(self.fd, TIOCINQ, TIOCM_zero_str)
IOError: [Errno 6] Device not configured



Waiting for Server-thread to finish


Exception in thread Thread-10:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


Exception in Tkinter callback


Traceback (most recent call last):

  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk/Tkinter.py", line 1536, in __call__

    return self.func(*args)

  File "build/bdist.macosx-10.9-intel/egg/pydon/pydonguifront.py", line 521, in stopMPD

    self.mpd.stopHive()

  File "build/bdist.macosx-10.9-intel/egg/pydon/metapydonhive.py", line 303, in stopHive

    self.swhive.exit()

  File "build/bdist.macosx-10.9-intel/egg/pydon/minihiveosc.py", line 373, in exit

    self.hive.exit()

  File "build/bdist.macosx-10.9-intel/egg/pydon/pydonhive.py", line 250, in exit

    self.serial.quit()

  File "build/bdist.macosx-10.9-intel/egg/pydon/hiveserialapi.py", line 281, in quit

    self.send_msg_inc( 0xFFFF, 'Q', [] );

  File "build/bdist.macosx-10.9-intel/egg/pydon/hiveserialapi.py", line 453, in send_msg_inc

    data=data

  File "/Library/Python/2.7/site-packages/xbee/base.py", line 447, in send

    self._write(self._build_command(cmd, **kwargs))

  File "/Library/Python/2.7/site-packages/xbee/base.py", line 99, in _write

    self.serial.write(frame)

  File "build/bdist.macosx-10.9-intel/egg/serial/serialposix.py", line 518, in write

    raise SerialException('write failed: %s' % (v,))

SerialException: write failed: [Errno 6] Device not configured

--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 10 is configured


minibee 10 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 10 is configured


minibee 10 is configured


minibee 10 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1421', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1421', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1421. Now waiting for messages.


minibee 10 is configured


minibee 10 is configured


minibee 10 is configured


minibee 10 is configured


minibee 11 is configured


minibee 12 is configured


minibee 10 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1421', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1421', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1421. Now waiting for messages.


minibee 10 is configured


minibee 11 is configured


minibee 11 is configured


minibee 12 is configured


minibee 10 is configured


minibee 10 is configured


minibee 10 is configured


minibee 10 is configured


minibee 10 is configured


minibee 11 is configured


minibee 10 is configured


minibee 10 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14231', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14231', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14231. Now waiting for messages.


minibee 10 is configured


minibee 11 is configured


minibee 12 is configured


minibee 11 is configured


minibee 11 is configured


minibee 11 is configured


minibee 11 is configured


minibee 13 is configured


minibee 14 is configured


minibee 11 is configured


minibee 11 is configured


minibee 11 is configured


minibee 11 is configured


minibee 11 is configured


minibee 11 is configured


minibee 11 is configured


minibee 12 is configured


minibee 12 is configured


minibee 11 is configured


minibee 10 is configured


minibee 10 is configured


minibee 11 is configured


minibee 12 is configured


minibee 13 is configured


('received data from unknown minibee', 1290, 19, [15, 106, 16, 213, 15, 218, 162, 83, 163, 8, 238, 20, 174, 13, 101, 241, 44, 140, 116, 90, 235, 86, 242, 57, 107, 172, 245, 56, 102, 156, 205, 34, 216, 243, 164, 222, 189, 247, 58, 242, 80, 199, 201, 25, 182, 145, 15, 136, 196, 196, 167, 40, 95, 162])


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14221', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14221', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14221. Now waiting for messages.


minibee 10 is configured


minibee 11 is configured


minibee 13 is configured


minibee 10 is configured


minibee 11 is configured


minibee 12 is configured


minibee 13 is configured


minibee 13 is configured


Exception in thread xbee-thread:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 110, in run
    self._callback(self.wait_read_frame())
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 460, in wait_read_frame
    frame = self._wait_for_frame()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 177, in _wait_for_frame
    if self.serial.inWaiting() == 0:
  File "build/bdist.macosx-10.9-intel/egg/serial/serialposix.py", line 449, in inWaiting
    s = fcntl.ioctl(self.fd, TIOCINQ, TIOCM_zero_str)
IOError: [Errno 6] Device not configured



Traceback (most recent call last):

  File "/usr/local/bin/pydongui.py", line 5, in <module>

    
pkg_resources.run_script('pydon==0.35', 'pydongui.py')

  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources/__init__.py", line 742, in run_script

    
self.require(requires)[0].run_script(script_name, ns)

  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources/__init__.py", line 1674, in run_script

    
exec(script_code, namespace, namespace)

  File "/Library/Python/2.7/site-packages/pydon-0.35-py2.7.egg/EGG-INFO/scripts/pydongui.py", line 44, in <module>

    



  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk/Tkinter.py", line 1125, in mainloop

    
self.tk.mainloop(n)

KeyboardInterrupt



--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14221', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14221', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14221. Now waiting for messages.


minibee 12 is configured


minibee 11 is configured


minibee 13 is configured


minibee 14 is configured


minibee 13 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 10 is configured


minibee 11 is configured


minibee 12 is configured


minibee 13 is configured


minibee 13 is configured


Waiting for Server-thread to finish
Exception in thread Thread-6:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')





Done; goodbye


Traceback (most recent call last):

  File "/usr/local/bin/pydongui.py", line 5, in <module>

    
pkg_resources.run_script('pydon==0.35', 'pydongui.py')

  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources/__init__.py", line 742, in run_script

    
self.require(requires)[0].run_script(script_name, ns)

  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources/__init__.py", line 1674, in run_script

    
exec(script_code, namespace, namespace)

  File "/Library/Python/2.7/site-packages/pydon-0.35-py2.7.egg/EGG-INFO/scripts/pydongui.py", line 44, in <module>

    



  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk/Tkinter.py", line 1125, in mainloop

    
self.tk.mainloop(n)

KeyboardInterrupt



--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 14 is configured


minibee 12 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 14 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 12 is configured


minibee 13 is configured


minibee 10 is configured


minibee 11 is configured


Waiting for Server-thread to finish
Exception in thread Thread-6:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')





Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 10 is configured


minibee 12 is configured


minibee 11 is configured


minibee 13 is configured


Waiting for Server-thread to finish
Exception in thread Thread-10:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')





Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 12 is configured


minibee 13 is configured


minibee 10 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 11 is configured


minibee 10 is configured


minibee 13 is configured


minibee 12 is configured


minibee 10 is configured


minibee 10 is configured


Waiting for Server-thread to finish
Exception in thread Thread-6:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')





Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 10 is configured


minibee 11 is configured


minibee 13 is configured


minibee 12 is configured


Waiting for Server-thread to finish
Exception in thread Thread-10:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')





Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 11 is configured


minibee 10 is configured


minibee 12 is configured


minibee 13 is configured


Waiting for Server-thread to finish


Exception in thread Thread-14:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 10 is configured


minibee 11 is configured


minibee 12 is configured


minibee 13 is configured


Waiting for Server-thread to finish
Exception in thread Thread-18:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')





Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 14 is configured


minibee 13 is configured


minibee 14 is configured


minibee 12 is configured


minibee 11 is configured


minibee 10 is configured


minibee 10 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 11 is configured


minibee 14 is configured


minibee 11 is configured


minibee 12 is configured


minibee 13 is configured


minibee 13 is configured


minibee 13 is configured


minibee 13 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14131', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14131', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14131. Now waiting for messages.


minibee 13 is configured


minibee 14 is configured


minibee 12 is configured


minibee 11 is configured


minibee 13 is configured


minibee 13 is configured


minibee 10 is configured


minibee 14 is configured


minibee 12 is configured


minibee 11 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14141', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14141', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14141. Now waiting for messages.


minibee 11 is configured


minibee 10 is configured


minibee 12 is configured


minibee 13 is configured


minibee 14 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14141', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14141', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14141. Now waiting for messages.


minibee 11 is configured


minibee 12 is configured


minibee 10 is configured


minibee 14 is configured


minibee 13 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 10 is configured


minibee 12 is configured


minibee 13 is configured


minibee 14 is configured


minibee 11 is configured


minibee 14 is configured


minibee 10 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14131', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14131', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14131. Now waiting for messages.


minibee 10 is configured


minibee 10 is configured


minibee 11 is configured


minibee 10 is configured


minibee 12 is configured


minibee 13 is configured


minibee 14 is configured


minibee 10 is configured


minibee 11 is configured


minibee 14 is configured


minibee 12 is configured


minibee 13 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14131', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14131', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14131. Now waiting for messages.


minibee 13 is configured


minibee 10 is configured


minibee 14 is configured


minibee 12 is configured


minibee 11 is configured


minibee 14 is configured


minibee 10 is configured


minibee 12 is configured


minibee 11 is configured


minibee 13 is configured


minibee 14 is configured


Waiting for Server-thread to finish


Exception in thread Thread-6:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14141', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14141', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14141. Now waiting for messages.


minibee 10 is configured


minibee 12 is configured


minibee 14 is configured


minibee 13 is configured


minibee 11 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14141', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14141', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14141. Now waiting for messages.


minibee 14 is configured


minibee 11 is configured


minibee 13 is configured


minibee 12 is configured


minibee 10 is configured


minibee 14 is configured


minibee 10 is configured


minibee 12 is configured


minibee 11 is configured


minibee 13 is configured


Exception in thread xbee-thread:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 110, in run
    self._callback(self.wait_read_frame())
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 460, in wait_read_frame
    frame = self._wait_for_frame()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 177, in _wait_for_frame
    if self.serial.inWaiting() == 0:
  File "build/bdist.macosx-10.9-intel/egg/serial/serialposix.py", line 449, in inWaiting
    s = fcntl.ioctl(self.fd, TIOCINQ, TIOCM_zero_str)
IOError: [Errno 6] Device not configured



--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14231', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14231', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14231. Now waiting for messages.


minibee 10 is configured


minibee 14 is configured


minibee 13 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14231', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14231', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14231. Now waiting for messages.


minibee 10 is configured


minibee 10 is configured


minibee 14 is configured


minibee 13 is configured


minibee 10 is configured


minibee 13 is configured


minibee 14 is configured


Exception in thread xbee-thread:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 110, in run
    self._callback(self.wait_read_frame())
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 460, in wait_read_frame
    frame = self._wait_for_frame()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 177, in _wait_for_frame
    if self.serial.inWaiting() == 0:
  File "build/bdist.macosx-10.9-intel/egg/serial/serialposix.py", line 449, in inWaiting
    s = fcntl.ioctl(self.fd, TIOCINQ, TIOCM_zero_str)
IOError: [Errno 6] Device not configured



--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14231', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14231', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14231. Now waiting for messages.


minibee 10 is configured


minibee 13 is configured


minibee 14 is configured


Exception in thread xbee-thread:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 110, in run
    self._callback(self.wait_read_frame())
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 460, in wait_read_frame
    frame = self._wait_for_frame()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 177, in _wait_for_frame
    if self.serial.inWaiting() == 0:
  File "build/bdist.macosx-10.9-intel/egg/serial/serialposix.py", line 449, in inWaiting
    s = fcntl.ioctl(self.fd, TIOCINQ, TIOCM_zero_str)
IOError: [Errno 6] Device not configured



--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14231', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14231', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14231. Now waiting for messages.


minibee 14 is configured


minibee 10 is configured


minibee 13 is configured


minibee 13 is configured


minibee 10 is configured


minibee 13 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14131', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14131', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14131. Now waiting for messages.


minibee 10 is configured


minibee 11 is configured


minibee 10 is configured


minibee 12 is configured


minibee 13 is configured


minibee 14 is configured


minibee 11 is configured


minibee 13 is configured


minibee 11 is configured


minibee 11 is configured


minibee 12 is configured


minibee 14 is configured


minibee 11 is configured


minibee 13 is configured


minibee 10 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14131', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14131', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14131. Now waiting for messages.


minibee 14 is configured


minibee 13 is configured


minibee 11 is configured


Waiting for Server-thread to finish


Exception in thread Thread-6:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14131', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14131', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14131. Now waiting for messages.


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14131', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14131', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14131. Now waiting for messages.


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14131', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14131', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14131. Now waiting for messages.


minibee 10 is configured


minibee 11 is configured


minibee 13 is configured


minibee 12 is configured


minibee 14 is configured


('received data from unknown minibee', 5, 34, [15, 20, 16, 13, 15, 219])


Exception in thread xbee-thread:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 110, in run
    self._callback(self.wait_read_frame())
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 460, in wait_read_frame
    frame = self._wait_for_frame()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 177, in _wait_for_frame
    if self.serial.inWaiting() == 0:
  File "build/bdist.macosx-10.9-intel/egg/serial/serialposix.py", line 449, in inWaiting
    s = fcntl.ioctl(self.fd, TIOCINQ, TIOCM_zero_str)
IOError: [Errno 6] Device not configured



--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14141', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14141', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14141. Now waiting for messages.


minibee 14 is configured


minibee 12 is configured


minibee 13 is configured


minibee 11 is configured


minibee 10 is configured


minibee 11 is configured


Exception in thread xbee-thread:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 110, in run
    self._callback(self.wait_read_frame())
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 460, in wait_read_frame
    frame = self._wait_for_frame()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 177, in _wait_for_frame
    if self.serial.inWaiting() == 0:
  File "build/bdist.macosx-10.9-intel/egg/serial/serialposix.py", line 449, in inWaiting
    s = fcntl.ioctl(self.fd, TIOCINQ, TIOCM_zero_str)
IOError: [Errno 6] Device not configured



--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14141', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14141. Now waiting for messages.


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


trying to open serial port


trying to open serial port


('could not open serial port', '/dev/cu.usbmodem14141')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14141', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14141', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14141. Now waiting for messages.


minibee 11 is configured


minibee 10 is configured


minibee 14 is configured


minibee 12 is configured


minibee 13 is configured


minibee 11 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14131', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14131', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14131. Now waiting for messages.


minibee 10 is configured


minibee 13 is configured


minibee 11 is configured


minibee 12 is configured


minibee 14 is configured


minibee 14 is configured


minibee 10 is configured


('received data from unknown minibee', 32268, 255, [8, 49, 15, 210, 15, 102])


minibee 12 is configured


minibee 13 is configured


minibee 14 is configured


minibee 12 is configured


minibee 14 is configured


minibee 13 is configured


minibee 10 is configured


minibee 11 is configured


Exception in thread xbee-thread:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 110, in run
    self._callback(self.wait_read_frame())
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 460, in wait_read_frame
    frame = self._wait_for_frame()
  File "/Library/Python/2.7/site-packages/xbee/base.py", line 177, in _wait_for_frame
    if self.serial.inWaiting() == 0:
  File "build/bdist.macosx-10.9-intel/egg/serial/serialposix.py", line 449, in inWaiting
    s = fcntl.ioctl(self.fd, TIOCINQ, TIOCM_zero_str)
IOError: [Errno 6] Device not configured



--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem14141', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem14141', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem14141. Now waiting for messages.


minibee 10 is configured


minibee 13 is configured


minibee 11 is configured


minibee 12 is configured


minibee 14 is configured


Traceback (most recent call last):

  File "/usr/local/bin/pydongui.py", line 5, in <module>

    
pkg_resources.run_script('pydon==0.35', 'pydongui.py')

  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources/__init__.py", line 742, in run_script

    
self.require(requires)[0].run_script(script_name, ns)

  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources/__init__.py", line 1674, in run_script

    
exec(script_code, namespace, namespace)

  File "/Library/Python/2.7/site-packages/pydon-0.35-py2.7.egg/EGG-INFO/scripts/pydongui.py", line 44, in <module>

    



  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk/Tkinter.py", line 1125, in mainloop

    
self.tk.mainloop(n)

KeyboardInterrupt



--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 14 is configured


minibee 10 is configured


minibee 12 is configured


minibee 13 is configured


minibee 11 is configured


minibee 11 is configured


minibee 13 is configured


minibee 12 is configured


minibee 11 is configured


minibee 13 is configured


minibee 11 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 11 is configured


minibee 14 is configured


minibee 10 is configured


minibee 12 is configured


minibee 13 is configured


minibee 13 is configured


minibee 12 is configured


minibee 11 is configured


minibee 11 is configured


minibee 11 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 11 is configured


minibee 14 is configured


minibee 12 is configured


minibee 13 is configured


minibee 10 is configured


('no configuration defined for minibee', 'FF00B5500013A200', 1, '')


configuration saved to newconfig_2017_Dec_02_12-08-12.xml. Please adapt (at least define a config id other than -1 for the node), save to a new name,


and restart the program with that configuration file. Alternatively send a message with a new configuration (via osc, or via the datanetwork).


Check documentation for details.


minibee 13 is configured


minibee 11 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 10 is configured


minibee 11 is configured


minibee 14 is configured


minibee 11 is configured


minibee 10 is configured


minibee 13 is configured


minibee 12 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 10 is configured


minibee 11 is configured


minibee 10 is configured


minibee 11 is configured


minibee 14 is configured


minibee 13 is configured


minibee 12 is configured


minibee 10 is configured


minibee 11 is configured


Waiting for Server-thread to finish


Exception in thread Thread-2:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')



Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 11 is configured


minibee 10 is configured


minibee 12 is configured


minibee 13 is configured


minibee 14 is configured


Waiting for Server-thread to finish
Exception in thread Thread-6:
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/Library/Python/2.7/site-packages/OSC.py", line 1816, in serve_forever
    self.handle_request()	# this times-out when no data arrives.
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 276, in handle_request
    fd_sets = _eintr_retry(select.select, [self], [], [], timeout)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 155, in _eintr_retry
    return func(*args)
error: (9, 'Bad file descriptor')





Done; goodbye


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network.


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/cu.usbmodem1411', 'port': 57600, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


trying to open serial port


('Opening serial port', '/dev/cu.usbmodem1411', True)


initialising communication through serial port


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/cu.usbmodem1411. Now waiting for messages.


minibee 11 is configured


minibee 14 is configured


minibee 10 is configured


minibee 13 is configured


minibee 13 is configured


minibee 12 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


WARNING: Could not open the file /Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml for reading. Does the file exist?


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


WARNING: Could not open the file /Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml for reading. Does the file exist?


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': '/Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


WARNING: Could not open the file /Users/kennethflak/Documents/Music/ARDUINO/kollektivKconfiguration.xml for reading. Does the file exist?


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'kollektivKconfiguration.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 12 is configured


Send config message for MiniBee
 
14
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
14
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
14
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
14
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
14
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 14 is configured


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 13 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 13 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


('received data from unknown minibee', 65530, 143, [15, 64, 16, 36, 15, 156])


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('faulty serial number', 'FF00BF500013A200')


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Exception in thread xbee-thread:
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
    self.run()
  File "/usr/lib/python2.7/site-packages/xbee/base.py", line 110, in run
    self._callback(self.wait_read_frame())
  File "/usr/lib/python2.7/site-packages/xbee/base.py", line 460, in wait_read_frame
    frame = self._wait_for_frame()
  File "/usr/lib/python2.7/site-packages/xbee/base.py", line 177, in _wait_for_frame
    if self.serial.inWaiting() == 0:
  File "build/bdist.linux-x86_64/egg/serial/serialutil.py", line 522, in inWaiting
    return self.in_waiting
  File "build/bdist.linux-x86_64/egg/serial/serialposix.py", line 467, in in_waiting
    s = fcntl.ioctl(self.fd, TIOCINQ, TIOCM_zero_str)
IOError: [Errno 5] Input/output error



--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
14
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
14
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 12 is configured


Send config message for MiniBee
 
14
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
14
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
14
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 14 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 13 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Exception in thread xbee-thread:
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
    self.run()
  File "/usr/lib/python2.7/site-packages/xbee/base.py", line 110, in run
    self._callback(self.wait_read_frame())
  File "/usr/lib/python2.7/site-packages/xbee/base.py", line 460, in wait_read_frame
    frame = self._wait_for_frame()
  File "/usr/lib/python2.7/site-packages/xbee/base.py", line 177, in _wait_for_frame
    if self.serial.inWaiting() == 0:
  File "build/bdist.linux-x86_64/egg/serial/serialutil.py", line 522, in inWaiting
    return self.in_waiting
  File "build/bdist.linux-x86_64/egg/serial/serialposix.py", line 467, in in_waiting
    s = fcntl.ioctl(self.fd, TIOCINQ, TIOCM_zero_str)
IOError: [Errno 5] Input/output error



Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


Traceback (most recent call last):

  File "/usr/bin/pydoncli.py", line 85, in <module>

    
mpd.startHive()

  File "/usr/lib/python2.7/site-packages/pydon/metapydonhive.py", line 365, in startHive

    
self.swhive.start()

  File "/usr/lib/python2.7/site-packages/pydon/minihiveosc.py", line 411, in start

    
self.exit()

  File "/usr/lib/python2.7/site-packages/pydon/minihiveosc.py", line 404, in exit

    
self.hive.exit()

  File "/usr/lib/python2.7/site-packages/pydon/pydonhive.py", line 275, in exit

    
self.serial.quit()

  File "/usr/lib/python2.7/site-packages/pydon/hiveserialapi.py", line 295, in quit

    
self.send_msg_inc( 0xFFFF, 'Q', [] );

  File "/usr/lib/python2.7/site-packages/pydon/hiveserialapi.py", line 498, in send_msg_inc

    
data=data

  File "/usr/lib/python2.7/site-packages/xbee/base.py", line 447, in send

    
self._write(self._build_command(cmd, **kwargs))

  File "/usr/lib/python2.7/site-packages/xbee/base.py", line 99, in _write

    
self.serial.write(frame)

  File "build/bdist.linux-x86_64/egg/serial/serialposix.py", line 544, in write

serial.serialutil
.
SerialException
: 
write failed: [Errno 5] Input/output error


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


serial port is open again


initialising communication through serial port


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 12 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Exception in thread xbee-thread:
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
    self.run()
  File "/usr/lib/python2.7/site-packages/xbee/base.py", line 110, in run
    self._callback(self.wait_read_frame())
  File "/usr/lib/python2.7/site-packages/xbee/base.py", line 460, in wait_read_frame
    frame = self._wait_for_frame()
  File "/usr/lib/python2.7/site-packages/xbee/base.py", line 177, in _wait_for_frame
    if self.serial.inWaiting() == 0:
  File "build/bdist.linux-x86_64/egg/serial/serialutil.py", line 522, in inWaiting
    return self.in_waiting
  File "build/bdist.linux-x86_64/egg/serial/serialposix.py", line 467, in in_waiting
    s = fcntl.ioctl(self.fd, TIOCINQ, TIOCM_zero_str)
IOError: [Errno 5] Input/output error



--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 12 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


serial port was not opened


serial port is closed, trying to open serial port again


trying to open serial port


('could not open serial port', '/dev/ttyACM0')


Please make sure your coordinator node is connected to the computer and pass in the right serial port location upon startup, e.g. 'python swpydonhive.py -s /dev/ttyUSB1'


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


--------------------------------------------------------------------------------------


MetaPydonHive - a universal client to communicate with the minibee network. version v0.40


 --- to find out more about the startup options start with 'metapydonhive.py -h'


 --- The client has been started with these options:


{'verbose': False, 'apimode': True, 'ip': '0.0.0.0', 'xbeeerror': False, 'serial': '/dev/ttyACM0', 'port': 57600, 'createNewFiles': True, 'logdata': False, 'minibees': 20, 'program': 'osc', 'logdir': '.', 'autostart': False, 'hport': 57120, 'config': 'mb10-14.xml', 'baudrate': 57600, 'host': '127.0.0.1', 'mboffset': 1, 'name': 'pydonhive', 'loglevel': 'info', 'quiet': False, 'ignore': False, 'logname': 'pydon.log', 'clean': False}


--------------------------------------------------------------------------------------


('ignoring unknown minibees', False)


('check for xbee errors', False)


trying to open serial port


('Opening serial port', '/dev/ttyACM0', True)


initialising communication through serial port


('create new files for unknown minibees', True)


Created OSC listener at (0.0.0.0,57600) and OSC sender to (127.0.0.1,57120) and opened serial port at /dev/ttyACM0. Now waiting for messages.


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
12
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 12 is configured


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
13
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 13 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
10
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 10 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


Send config message for MiniBee
 
11
 
, revision
 
D


Configuration:
 
{'A5': 'TWIClock', 'A4': 'TWIData'}


('confirmconfig', [1, 0, 50, 6, 0, 0, 0])


minibee 11 is configured


Waiting for Server-thread to finish


Done; goodbye


exiting hive loop


